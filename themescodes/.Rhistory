library(tidytext)
library(tidytext)
# packages
library(tidyverse)
library(tidytext)
library(rtweet)
library(ggplot2)
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("themescodes/Final Coding.csv")
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("Final Coding.csv")
pwd
getwd
getwd()
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("./Final Coding.csv")
setwd("~/DAAAAMN/disruptjmm/themescodes")
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("./Final Coding.csv")
View(DisruptCoded)
size_dc<-dim(DisruptCoded)
nrow_dc<-size_dc[1]
#set up a summary dataframe and store theme counts and frequencies
Themes<-c("Self.organization", "Building.community","Broadening.the.counterpublic", "Creating.change.in.math", "SJEDI")
Nper<-c(sum(DisruptCoded$Self.organization), sum(DisruptCoded$Building.community), sum(DisruptCoded$Broadening.the.counterpublic), sum(DisruptCoded$Creating.change.in.math), sum(DisruptCoded$SJEDI))
Freqper <- Nper/nrow_dc
ThemeSummary<-data.frame(Nper, Freqper)
row.names(ThemeSummary)<-Themes
#Examine only the non-RT
#original content tweets (OCT) are original tweets (OT), replies, and quote tweets (QT)
whichRT<-str_detect(DisruptCoded$text, "^RT ")
OCT<-filter(DisruptCoded,!whichRT)
NperOCT<-c(sum(OCT$Self.organization), sum(OCT$Building.community), sum(OCT$Broadening.the.counterpublic), sum(OCT$Creating.change.in.math), sum(OCT$SJEDI))
FreqperOCT <- NperOCT/nrow_dc
ThemeSummary <- cbind(ThemeSummary, NperOCT, FreqperOCT)
#Tweet subsets of each code
SOtweets<-filter(DisruptCoded,Self.organization == 1)
BCtweets<-filter(DisruptCoded,Building.community == 1)
BtCtweets<-filter(DisruptCoded,Broadening.the.counterpublic == 1)
CCtweets<-filter(DisruptCoded,Creating.change.in.math == 1)
SJtweets<-filter(DisruptCoded,SJEDI == 1)
View(DisruptCoded)
FreqperOCT <- NperOCT/(dim(OCT)[1])
ThemeSummary <- cbind(ThemeSummary, NperOCT, FreqperOCT)
View(DisruptCoded)
test=separate(SOtweets, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
test=separate(SOtweets$SO.code, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
test=separate(SOtweets,SO.code, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
View(test)
filter(grep("amplification",SOtweets$SO.code))
filter(SOtweets,grep("amplification",SO.code))
filter(SOtweets,grepl("amplification",SO.code))
test=filter(SOtweets,grepl("amplification",SO.code))
View(test)
indigenousTweets=filter(SJtweets,grepl("indigenous",SO.code))
View(indigenousTweets)
indigenousTweets=filter(SJtweets,grepl("indigenous",SJ.code))
View(indigenousTweets)
indigenousTweets=filter(SJtweets,grepl("indigenous",SJEDI.code))
View(indigenousTweets)
#How many tweets got teh indigenous tag?
#Filter out  tweets by ones that have "indigenous" in the SJEDI.code column
indigenousTweets=filter(OCT,grepl("indigenous",SJEDI.code))
View(indigenousTweets)
talkSupportTweets=filter(OCT,grepl("talk support",BC.code))
dim(talkSupportTweets)[1]
dim(filter(OCT,grepl("strategic planning",SO.code)))[1]
#One liner
nrow(filter(OCT,grepl("strategic planning",SO.code)))
nrow(talkSupportTweets)
knitr::opts_chunk$set(echo = TRUE)
# packages
library(tidyverse)
library(tidytext)
library(rtweet)
library(ggplot2)
library(knitr)
library(kableExtra)
#Read in file
DisruptCoded<-read.csv("./Final Coding.csv")
#set up a summary dataframe and store theme counts and frequencies
Themes<-c("Self organization", "Building community","Broadening the counterpublic", "Creating change in math", "SJEDI")
Nper<-c(sum(DisruptCoded$Self.organization), sum(DisruptCoded$Building.community), sum(DisruptCoded$Broadening.the.counterpublic), sum(DisruptCoded$Creating.change.in.math), sum(DisruptCoded$SJEDI))
Freqper <- Nper/nrow(DisruptCoded)
ThemeSummary<-data.frame(Nper, Freqper)
row.names(ThemeSummary)<-Themes
#Examine only the non-RT
#original content tweets (OCT) are original tweets (OT), replies, and quote tweets (QT)
whichRT<-str_detect(DisruptCoded$text, "^RT ")
OCT<-filter(DisruptCoded,!whichRT)
NperOCT<-c(sum(OCT$Self.organization), sum(OCT$Building.community), sum(OCT$Broadening.the.counterpublic), sum(OCT$Creating.change.in.math), sum(OCT$SJEDI))
FreqperOCT <- NperOCT/nrow(OCT)
ThemeSummary <- cbind(ThemeSummary, NperOCT, FreqperOCT)
#Tweet subsets of each code
SOtweets<-filter(DisruptCoded,Self.organization == 1)
BCtweets<-filter(DisruptCoded,Building.community == 1)
BtCtweets<-filter(DisruptCoded,Broadening.the.counterpublic == 1)
CCtweets<-filter(DisruptCoded,Creating.change.in.math == 1)
SJtweets<-filter(DisruptCoded,SJEDI == 1)
#TimeSeries of Tweets by hours
#DisruptCoded<-cbind(DisruptCoded, time <- as.POSIXct(strptime(DisruptCoded$created_at, "%a, %d %b %Y %H:%M:%S %z", tz = "GMT")))
kable(ThemeSummary, col.names=c("Number of tweets", "Frequency of tweets", "Number of original tweets", "Frequency of original tweets"),digits=c(0,2,0,2,0))
SOtags <- c("amplification", "activation", "strategic planning", "SO impact", "troll")
SOtagCount <- data.frame(sapply(SOtags, function(tag) return(nrow(filter(OCT,grepl(tag,SO.code))))))
colnames(SOtagCount)[1] <- "Number"
SOtagCount['Bucket']="Self Organization"
BCtags <- c("thankful", "talk support", "belonging", "emotional support", "expertise support", "conversation", "celebration", "BC impact")
BCtagCount <- data.frame(sapply(BCtags, function(tag) return(nrow(filter(OCT,grepl(tag,BC.code))))))
colnames(BCtagCount)[1] <- "Number"
BCtagCount['Bucket']="Building Community"
BtCtags <- c("disrupteverything", "influencers", "beyond", "hashtags", "virtual participation")
BtCtagCount <- data.frame(sapply(BtCtags, function(tag) return(nrow(filter(OCT,grepl(tag,BtC.code))))))
colnames(BtCtagCount)[1] <- "Number"
BtCtagCount['Bucket']="Broadening the Counterpublic"
CCMtags <- c("humanize", "jmm experience", "math experience", "futures", "math practice", "current events", "allyship in math", "CC impact")
CCMtagCount <- data.frame(sapply(CCMtags, function(tag) return(nrow(filter(OCT,grepl(tag,CCM.code))))))
colnames(CCMtagCount)[1] <- "Number"
CCMtagCount['Bucket']="Creating Change in Math"
SJEDItags<-c("representation", "lgbtq", "bipoc", "gender", "indigenous", "power", "advocacy", "learning", "economic", "SJEDI impact")
SJEDItagCount <- data.frame(sapply(SJEDItags, function(tag) return(nrow(filter(OCT,grepl(tag,SJEDI.code))))))
colnames(SJEDItagCount)[1] <- "Number"
SJEDItagCount['Bucket']="SJEDI"
TagCounts <- rbind(SOtagCount, BCtagCount, BtCtagCount, CCMtagCount, SJEDItagCount)
TagCounts <- cbind(TagCounts, TagCounts$Number/nrow(OCT))
colnames(TagCounts)[3] <- "Frequency"
kable(TagCounts[order(TagCounts$Number,decreasing=TRUE),c(2,1,3)], digits=c(0,0,2))
tags=c(SOtags,BCtags,BtCtags,CCMtags,SJEDItags)
commonTags <- rownames(filter(TagCounts,Number>4))
coincidence <- function(tag1, tag2) {
t1 <- filter(DisruptCoded,grepl(tag1,paste(SO.code,BC.code,BtC.code,CCM.code,SJEDI.code)))
return(nrow(filter(t1,grepl(tag2,paste(SO.code,BC.code,BtC.code,CCM.code,SJEDI.code))))/nrow(t1))
}
coincidence_df <- outer(commonTags,commonTags,Vectorize(coincidence))
colnames(coincidence_df) <- commonTags
rownames(coincidence_df) <- commonTags
kable(coincidence_df,digits=2)
#kable seems to choke on newlines in tweets
#pipe through mutate_all(linebreak) to fix this
OCT %>% filter(grepl("indigenous",SJEDI.code)) %>% select(text) %>% mutate_all(linebreak) %>% kable
#kable seems to choke on newlines in tweets
#pipe through mutate_all(linebreak) to fix this
OCT %>% filter(grepl("humanize",CCM.code)) %>% select(text) %>% mutate_all(linebreak) %>% kable
OCT %>% filter(Self.organization == 1, Building.community==0, Broadening.the.counterpublic==0,Creating.change.in.math==0,SJEDI==0) %>% select(user_username,text)
OCT %>% filter(Self.organization == 0, Building.community==1, Broadening.the.counterpublic==0,Creating.change.in.math==0,SJEDI==0) %>% select(user_username,text)
OCT %>% filter(Self.organization == 0, Building.community==0, Broadening.the.counterpublic==1,Creating.change.in.math==0,SJEDI==0) %>% select(user_username,text)
OCT %>% filter(Self.organization == 0, Building.community==0, Broadening.the.counterpublic==0,Creating.change.in.math==1,SJEDI==0) %>% select(user_username,text)
OCT %>% filter(Self.organization == 0, Building.community==0, Broadening.the.counterpublic==0,Creating.change.in.math==0,SJEDI==1) %>% select(user_username,text)
