library(tidytext)
library(tidytext)
# packages
library(tidyverse)
library(tidytext)
library(rtweet)
library(ggplot2)
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("themescodes/Final Coding.csv")
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("Final Coding.csv")
pwd
getwd
getwd()
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("./Final Coding.csv")
setwd("~/DAAAAMN/disruptjmm/themescodes")
#Fake test data set to set up analysis
#DisruptCoded<-read.csv("themescodes/fakedisruptdata.csv")
DisruptCoded<-read.csv("./Final Coding.csv")
View(DisruptCoded)
size_dc<-dim(DisruptCoded)
nrow_dc<-size_dc[1]
#set up a summary dataframe and store theme counts and frequencies
Themes<-c("Self.organization", "Building.community","Broadening.the.counterpublic", "Creating.change.in.math", "SJEDI")
Nper<-c(sum(DisruptCoded$Self.organization), sum(DisruptCoded$Building.community), sum(DisruptCoded$Broadening.the.counterpublic), sum(DisruptCoded$Creating.change.in.math), sum(DisruptCoded$SJEDI))
Freqper <- Nper/nrow_dc
ThemeSummary<-data.frame(Nper, Freqper)
row.names(ThemeSummary)<-Themes
#Examine only the non-RT
#original content tweets (OCT) are original tweets (OT), replies, and quote tweets (QT)
whichRT<-str_detect(DisruptCoded$text, "^RT ")
OCT<-filter(DisruptCoded,!whichRT)
NperOCT<-c(sum(OCT$Self.organization), sum(OCT$Building.community), sum(OCT$Broadening.the.counterpublic), sum(OCT$Creating.change.in.math), sum(OCT$SJEDI))
FreqperOCT <- NperOCT/nrow_dc
ThemeSummary <- cbind(ThemeSummary, NperOCT, FreqperOCT)
#Tweet subsets of each code
SOtweets<-filter(DisruptCoded,Self.organization == 1)
BCtweets<-filter(DisruptCoded,Building.community == 1)
BtCtweets<-filter(DisruptCoded,Broadening.the.counterpublic == 1)
CCtweets<-filter(DisruptCoded,Creating.change.in.math == 1)
SJtweets<-filter(DisruptCoded,SJEDI == 1)
View(DisruptCoded)
FreqperOCT <- NperOCT/(dim(OCT)[1])
ThemeSummary <- cbind(ThemeSummary, NperOCT, FreqperOCT)
View(DisruptCoded)
test=separate(SOtweets, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
test=separate(SOtweets$SO.code, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
test=separate(SOtweets,SO.code, c("SO.code.1","SO.code.2","SO.code.3","SO.code.4"),extra="merge",fill="right",sep=";")
View(test)
filter(grep("amplification",SOtweets$SO.code))
filter(SOtweets,grep("amplification",SO.code))
filter(SOtweets,grepl("amplification",SO.code))
test=filter(SOtweets,grepl("amplification",SO.code))
View(test)
indigenousTweets=filter(SJtweets,grepl("indigenous",SO.code))
View(indigenousTweets)
indigenousTweets=filter(SJtweets,grepl("indigenous",SJ.code))
View(indigenousTweets)
indigenousTweets=filter(SJtweets,grepl("indigenous",SJEDI.code))
View(indigenousTweets)
#How many tweets got teh indigenous tag?
#Filter out  tweets by ones that have "indigenous" in the SJEDI.code column
indigenousTweets=filter(OCT,grepl("indigenous",SJEDI.code))
View(indigenousTweets)
talkSupportTweets=filter(OCT,grepl("talk support",BC.code))
dim(talkSupportTweets)[1]
dim(filter(OCT,grepl("strategic planning",SO.code)))[1]
#One liner
nrow(filter(OCT,grepl("strategic planning",SO.code)))
nrow(talkSupportTweets)
